= Use-case =

 http://img14.imageshack.us/img14/64/usertableusecase.png


= Description =


== Permissions checking ==

When bot recieves xmpp message (e.g. message body, sender JID and some other attributes) from server first of all it checks whether it is system command. If message is system command (this is checked using system commands parser), bot checks whether command sender (remote user) have enough permissions to execute it. There is the place where UsersTable comes to scene. It provides robust access to user's access level based on user JID.

If command was sent by anonymous user, access level of sender is set to *zero*

If system commands parser doesn't recognize message as system command, bot transfers message to plugins manager. Plugins manager in it's turn transfers message to each registered plugin.

Plugin developer may want to put access level restriction on plugin execution, so plugin may need UsersTable to check whether message sender (user) has enough access rights to perform plugin action.


_TODO: Add links to PluginsManager and SystemCommandsParser_


== User management ==

_Create [UserManagementAndPermissionsCommands] child page under SystemCommands and move all user management and permission checking commands into this child page_

Using Users table we provide almost complete implementation of several user management and permission checking commands {_Link to [UserManagementAndPermissionsCommands] page_ }